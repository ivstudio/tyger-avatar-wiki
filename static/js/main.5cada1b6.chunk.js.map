{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["avatars","component","name","App","className","map","avatar","React","cloneElement","width","title","id","onClick","console","log","handleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAeMA,EAAU,CACf,CAAEC,UAAW,cAAC,IAAD,IAAeC,KAAM,aAClC,CAAED,UAAW,cAAC,IAAD,IAAYC,KAAM,UAC/B,CAAED,UAAW,cAAC,IAAD,IAAgBC,KAAM,cACnC,CAAED,UAAW,cAAC,IAAD,IAAcC,KAAM,YACjC,CAAED,UAAW,cAAC,IAAD,IAAeC,KAAM,aAClC,CAAED,UAAW,cAAC,IAAD,IAAYC,KAAM,UAC/B,CAAED,UAAW,cAAC,IAAD,IAAgBC,KAAM,cACnC,CAAED,UAAW,cAAC,IAAD,IAAaC,KAAM,WAChC,CAAED,UAAW,cAAC,IAAD,IAAaC,KAAM,WAChC,CAAED,UAAW,cAAC,IAAD,IAAeC,KAAM,cAkCpBC,EA1BH,WAKX,OACC,qBAAKC,UAAU,YAAf,SACEJ,EAAQK,KAAI,YAAmC,IAAhCH,EAA+B,EAA/BA,KAAMD,EAAyB,EAAzBA,UACfK,EAASC,IAAMC,aAAaP,EAAW,CAC5CQ,MAAO,IACPC,MAAOR,EACPS,GAAG,QAAD,OAAUT,GACZU,QAAS,kBAXO,SAACV,GACpBW,QAAQC,IAAR,UAAeZ,EAAf,iBAUkBa,CAAYb,MAG5B,OACC,gCACC,qBAAKE,UAAU,cAAf,SAA8BE,IAC9B,4BAAIJ,MAFKA,SCnCAc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5cada1b6.chunk.js","sourcesContent":["import React from 'react';\nimport {\n\tTrChelsea,\n\tTrEric,\n\tTrSamantha,\n\tTrTorsten,\n\tTrIggy,\n\tTrFranklin,\n\tTrImran,\n\tTrMaria,\n\tTrShamila,\n\tTrRachel,\n} from 'tyger-avatar';\nimport './App.css';\n\nconst avatars = [\n\t{ component: <TrChelsea />, name: 'TrChelsea' },\n\t{ component: <TrEric />, name: 'TrEric' },\n\t{ component: <TrSamantha />, name: 'TrSamantha' },\n\t{ component: <TrRachel />, name: 'TrRachel' },\n\t{ component: <TrShamila />, name: 'TrShamila' },\n\t{ component: <TrIggy />, name: 'TrIggy' },\n\t{ component: <TrFranklin />, name: 'TrFranklin' },\n\t{ component: <TrImran />, name: 'TrImran' },\n\t{ component: <TrMaria />, name: 'TrMaria' },\n\t{ component: <TrTorsten />, name: 'TrTorsten' },\n];\n\ninterface IAvatar {\n\tcomponent: JSX.Element;\n\tname: string;\n}\n\nconst App = () => {\n\tconst handleClick = (name: string) => {\n\t\tconsole.log(`${name} was clicked`);\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t{avatars.map(({ name, component }: IAvatar) => {\n\t\t\t\tconst avatar = React.cloneElement(component, {\n\t\t\t\t\twidth: 140,\n\t\t\t\t\ttitle: name,\n\t\t\t\t\tid: `tyger${name}`,\n\t\t\t\t\tonClick: () => handleClick(name),\n\t\t\t\t});\n\n\t\t\t\treturn (\n\t\t\t\t\t<div key={name}>\n\t\t\t\t\t\t<div className=\"avatar-item\">{avatar}</div>\n\t\t\t\t\t\t<p>{name}</p>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}